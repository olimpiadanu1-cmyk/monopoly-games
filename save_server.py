#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from flask import Flask, request, jsonify, send_from_directory
from flask_cors import CORS
import json
import os

# üìÇ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–ø–∫–∏ —Å —Å–∞–π—Ç–æ–º
BASE_DIR = os.path.abspath(os.path.dirname(__file__))
FRONTEND_DIR = os.path.join(BASE_DIR, "frontend")  
DATA_DIR = os.path.join(BASE_DIR, "data")

app = Flask(__name__, static_folder=FRONTEND_DIR, static_url_path="")
CORS(app)

# –§–∞–π–ª—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_FILES = {
    'users': 'users.json',
    'applications': 'applications.json',
    'purchase_requests': 'purchase_requests.json',
    'task_submissions': 'task_submissions.json',
    'reward_history': 'reward_history.json',
    'leaderboard': 'leaderboard.json',
    'cell_tasks': 'cell_tasks.json',
    'game_states': 'game_states.json',
    'shop_items': 'shop_items.json',
    'shopping_carts': 'shopping_carts.json'
}

def save_data(data_type, data):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª"""
    if data_type not in DATA_FILES:
        return False
        
    file_path = os.path.join(DATA_DIR, DATA_FILES[data_type])
    try:
        with open(file_path, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {data_type} -> {file_path}")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è {data_type}: {e}")
        return False

# --- API ---
@app.route('/save/<data_type>', methods=['POST'])
def save_data_endpoint(data_type):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞"""
    try:
        data = request.get_json()
        if data is None:
            return jsonify({'success': False, 'error': '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}), 400
        
        success = save_data(data_type, data)
        if success:
            return jsonify({'success': True, 'message': f'–î–∞–Ω–Ω—ã–µ {data_type} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'})
        else:
            return jsonify({'success': False, 'error': '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è'}), 500
            
    except Exception as e:
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/status', methods=['GET'])
def get_status():
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({'success': True, 'message': '–°–µ—Ä–≤–µ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç'})

@app.route('/')
def serve_index():
    index_path = os.path.join(FRONTEND_DIR, "index.html")
    if os.path.exists(index_path):
        return send_from_directory(FRONTEND_DIR, "index.html")
    else:
        return "index.html –Ω–µ –Ω–∞–π–¥–µ–Ω", 404

@app.route('/<path:path>')
def serve_static(path):
    file_path = os.path.join(FRONTEND_DIR, path)
    if os.path.exists(file_path):
        return send_from_directory(FRONTEND_DIR, path)
    else:
        return "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω", 404

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 5000))  # –±–µ—Ä–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5000
    print(f"–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Monopoly –Ω–∞ –ø–æ—Ä—Ç—É {port}...")
    
    # host="0.0.0.0" —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ
    app.run(host='0.0.0.0', port=port, debug=False)

